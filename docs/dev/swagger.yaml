
swagger: '2.0'
info:
  version: '1.0'
  title: Open Monograph Press API
  description: API to interact with Open Monograph Press
  contact:
    name: Public Knowledge Project
    url: 'http://pkp.sfu.ca'
produces:
  - application/json
securityDefinitions:
  ApiTokenQueryParam:
    type: apiKey
    in: query
    name: apiToken
security:
  - ApiTokenQueryParam: []
host: localhost:8000
basePath: /index.php/publicknowledge/api/v1
schemes:
  - http
  - https
tags:
  - name: "Submissions"
  - name: "Series"
  - name: "Categories"
  - name: "Users"
    description: Only admins, journal editors, and subeditors can access these endpoints.
  - name: "Backend"
    description: "Private endpoints for OJS UI."
    
definitions:
  Submission:
    type: object
    properties:
      id:
        type: integer
      _href:
        type: string
      title:
        $ref: '#/definitions/LocaleObject'
      subtitle:
        $ref: '#/definitions/LocaleObject'
      fullTitle:
        $ref: '#/definitions/LocaleObject'
      prefix:
        $ref: '#/definitions/LocaleObject'
      authorString:
        type: string
      shortAuthorString:
        type: string
      authors:
        type: array
        items:
          $ref: '#/definitions/Author'
      abstract:
        $ref: '#/definitions/LocaleObject'
      coverImageUrl:
        $ref: '#/definitions/LocaleObject'
      coverImageAltText:
        $ref: '#/definitions/LocaleObject'
      discipline:
        $ref: '#/definitions/LocaleObject'
      subject:
        $ref: '#/definitions/LocaleObject'
      type:
        $ref: '#/definitions/LocaleObject'
      language:
        type: string
      sponsor:
        $ref: '#/definitions/LocaleObject'
      pages:
        type: string
      copyrightHolder:
        $ref: '#/definitions/LocaleObject'
      copyrightYear:
        type: string
      licenseUrl:
        type: string
      locale:
        type: string
      dateSubmitted:
        type: string
      dateStatusModified:
        type: string
      lastModified:
        type: string
      datePublished:
        type: string
      status:
        type: object
        properties:
          id:
            type: integer
          label:
            type: string
      submissionProgress:
        type: integer
      stages:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            label:
              type: string
            isActiveStage:
              type: boolean
            currentUserAssignedRoles:
              type: array
              items:
                type: integer
            # @TODO Consider queries/files information to return
            # queries:
            #   type: array
            #   items:
            #     $ref: '#/definitions/Query'
            # files:
            #   type: array
            #   items:
            #     $ref: '#/definitions/File'
      reviewRounds:
        type: array
        items:
          $ref: '#/definitions/ReviewRound'
      reviewAssignments:
        type: array
        items:
          $ref: '#/definitions/ReviewAssignment'
      urlWorkflow:
        type: string
      urlPublished:
        type: string
      chapters:
        type: array
        items:
          $ref: '#/definitions/Chapter'
      doi:
        type: string
  SubmissionSummary:
    type: object
    properties:
      id:
        type: integer
      _href:
        type: string
      title:
        $ref: '#/definitions/LocaleObject'
      subtitle:
        $ref: '#/definitions/LocaleObject'
      fullTitle:
        $ref: '#/definitions/LocaleObject'
      prefix:
        $ref: '#/definitions/LocaleObject'
      authorString:
        type: string
      shortAuthorString:
        type: string
      authors:
        type: array
        items:
          $ref: '#/definitions/AuthorSummary'
      abstract:
        $ref: '#/definitions/LocaleObject'
      coverImageUrl:
        $ref: '#/definitions/LocaleObject'
      coverImageAltText:
        $ref: '#/definitions/LocaleObject'
      language:
        type: string
      pages:
        type: string
      datePublished:
        type: string
      status:
        type: object
        properties:
          id:
            type: integer
          label:
            type: string
      submissionProgress:
        type: integer
      urlWorkflow:
        type: string
      urlPublished:
        type: string
      chapters:
        type: array
        items:
          $ref: '#/definitions/ChapterSummary'
      doi:
        type: string
  Chapter:
    type: object
    properties:
      id:
        type: integer
      _parent:
        type: string
      title:
        type: string
      subTitle:
        type: string
      fullTitle:
        type: string
      seq:
        type: integer
      authors:
        type: string
      files:
        type: array
        items:
          $ref: '#/definitions/File'
  ChapterSummary:
    type: object
    properties:
      id:
        type: integer
      _parent:
        type: string
      title:
        type: string
      subTitle:
        type: string
      seq:
        type: integer
      authors:
        type: string
      files:
        type: array
        items:
          $ref: '#/definitions/File'
  Serie:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
  CategoryImage:
    type: object
    properties:
      name:
        type: string
      width:
        type: integer
      height:
        type: integer
      thumbnailName:
        type: string
      thumbnailWidth:
        type: integer
      thumbnailHeight:
        type: integer
      uploadName:
        type: string
      dateUploaded:
        type: string
  Category:
    type: object
    properties:
      id:
        type: integer
      _parent:
        type: string
      path:
        type: string
      title:
        type: string
      description:
        type: string
      image:
        $ref: '#/definitions/CategoryImage'
      sort:
        type: string
      seq:
        type: integer
  CategorySummary:
    type: object
    properties:
      id:
        type: integer
      _parent:
        type: string
      path:
        type: string
      title:
        type: string
      seq:
        type: integer
  Author:
    type: object
    properties:
      id:
        type: integer
      seq:
        type: integer
      firstName:
        type: string
      middleName:
        type: string
      lastName:
        type: string
      suffix:
        type: string
      fullName:
        type: string
      country:
        type: string
      email:
        type: string
      url:
        type: string
      userGroupId:
        type: string
      isBrowseable:
        type: boolean
      isPrimaryContact:
        type: boolean
      affiliation:
        $ref: '#/definitions/LocaleObject'
      biography:
        $ref: '#/definitions/LocaleObject'
      orcid:
        type: string
  AuthorSummary:
    type: object
    properties:
      id:
        type: integer
      seq:
        type: integer
      fullName:
        type: string
      orcid:
        type: string
  File:
    type: object
    properties:
      id:
        type: integer
      revision:
        type: integer
      fileStage:
        type: integer
      fileName:
        type: string
      genreId:
        type: integer
      metadata:
        type: object
        properties:
          description:
            $ref: '#/definitions/LocaleObject'
          creator:
            $ref: '#/definitions/LocaleObject'
          publisher:
            $ref: '#/definitions/LocaleObject'
          source:
            $ref: '#/definitions/LocaleObject'
          subject:
            $ref: '#/definitions/LocaleObject'
          sponsor:
            $ref: '#/definitions/LocaleObject'
          dateCreated:
            type: string
          language:
            type: string
          caption:
            type: string
          credit:
            type: string
          copyrightOwner:
            type: string
          terms:
            type: string
          width:
            type: string
          height:
            type: string
          physicalWidth:
            type: string
          physicalHeight:
            type: string
  ReviewRound:
    type: object
    properties:
      id:
        type: integer
      round:
        type: integer
      stageId:
        type: integer
      statusId:
        type: integer
      status:
        type: string
  ReviewAssignment:
    type: object
    properties:
      id:
        type: integer
      assignedUserId:
        type: integer
      isCurrentUserAssigned:
        type: boolean
      statusId:
        type: integer
      status:
        type: string
      due:
        type: string
      responseDue:
        type: string
      round:
        type: integer
      roundId:
        type: integer
  UserSummary:
    type: object
    properties:
      id:
        type: integer
      _href:
        type: string
      userName:
        type: string
      email:
        type: string
      fullName:
        type: string
      orcid:
        type: string
      groups:
        type: array
        items:
          $ref: '#/definitions/UserGroup'
      disabled:
        type: boolean
  User:
    type: object
    properties:
      id:
        type: integer
      userName:
        type: string
      fullName:
        type: string
      firstName:
        type: string
      middleName:
        type: string
      lastName:
        type: string
      initials:
        type: string
      salutation:
        type: string
      suffix:
        type: string
      affiliation:
        $ref: '#/definitions/LocaleObject'
      country:
        type: string
      url:
        type: string
      email:
        type: string
      orcid:
        type: string
      groups:
        type: array
        items:
          $ref: '#/definitions/UserGroup'
      biography:
        $ref: '#/definitions/LocaleObject'
      signature:
        $ref: '#/definitions/LocaleObject'
      authId:
        type: integer
      authString:
        type: string
      phone:
        type: string
      mailingAddress:
        type: string
      billingAddress:
        type: string
      interests:
        type: array
        items:
          $ref: '#/definitions/UserInterest'
      gossip:
        $ref: '#/definitions/LocaleObject'
      disabled:
        type: boolean
      disabledReason:
        type: string
      dateRegistered:
        type: string
      dateValidated:
        type: string
      dateLastLogin:
        type: string
      mustChangePassword:
        type: boolean
  ReviewerSummary:
    type: object
    properties:
      id:
        type: integer
      _href:
        type: string
      userName:
        type: string
      fullName:
        type: string
      affiliation:
        $ref: '#/definitions/LocaleObject'
      groups:
        type: array
        items:
          $ref: '#/definitions/UserGroup'
      interests:
        type: array
        items:
          $ref: '#/definitions/UserInterest'
      gossip:
        $ref: '#/definitions/LocaleObject'
      reviewsActive:
        type: integer
      reviewsCompleted:
        type: integer
      averageReviewCompletionDays:
        type: integer
      dateLastReviewAssignment:
        type: string
      disabled:
        type: boolean
  UserGroup:
    type: object
    properties:
      id:
        type: integer
      name:
        $ref: '#/definitions/LocaleObject'
      abbrev:
        $ref: '#/definitions/LocaleObject'
      roleId:
        type: integer
      showTitle:
        type: boolean
      permitSelfRegistration:
        type: boolean
      recommendOnly:
        type: boolean
  UserInterest:
    type: object
    properties:
      id:
        type: integer
      interest:
        type: string
  LocaleObject:
    type: object
    description: Key/value pairs containing strings by locale key.
    example:
      en_US: Filename
      fr_CA: Nom de fichier
  ErrorResponse:
    type: object
    description: A response object that will be returned when the request could not be fulfilled.
    properties:
      error:
        type: string
      errorMessage:
        type: string

paths:
  '/submissions':
    get:
      tags:
        - Submissions
      summary: Get a list of submissions.
      description: |
        **OJS 3.1 Target**:
          * See `/submissions/{submissionId}`.
      parameters:
        - name: status
          description: Filter results by submission status. Pass more than one status in a comma-separated list (eg - `3,4`). Must match the value of the `STATUS_QUEUED`, `STATUS_PUBLISHED` or `STATUS_DECLINED` constants in OJS 3.
          in: query
          required: false
          type: string
        - name: assignedTo
          description: Filter results by those assigned to this user ID. All users except managers and admins are automatically restricted to assigned submissions and do not need to pass this parameter.
          in: query
          required: false
          type: integer
        - name: count
          description: How many results to return in a single request. Default is `20`. Max is `100`.
          in: query
          required: false
          type: integer
        - name: offset
          description: Offset the results returned. Use this to receive subsequent pages of requests. A `count` of `10` and `offset` of `15` will return results `15` to `25`.
          in: query
          required: false
          type: integer
        - name: orderBy
          description: Order the results returned. Must be one of `dateSubmitted`, `lastModified` or `title`. Default is `dateSubmitted`.
          in: query
          required: false
          type: string
        - name: orderDirection
          description: Return the results in ascending or descending order. Must be `ASC` or `DESC`. Default is `DESC`.
          in: query
          required: false
          type: string
        - name: isIncomplete
          description: Filter the results by those for which the author has not yet completed the submission process.
          in: query
          required: false
          type: boolean
        - name: isOverdue
          description: Filter the results by those for which a reviewer has missed a deadline.
          in: query
          required: false
          type: boolean
        - name: sectionIds
          description: Filter the results by those assigned to a section.
          in: query
          required: false
          type: string
        - name: searchPhrase
          description: Filter the results by a search phrase matched against the title and authors.
          in: query
          required: false
          type: string
      responses:
        '200':
          description: List of submissions.
          schema:
            type: object
            properties:
              itemsMax:
                type: integer
              items:
                type: array
                items:
                  $ref: '#/definitions/Submission'
        '403':
          description: You do not have permission to access submissions assigned to the user requested in the `assignedTo` parameter.
          schema:
            $ref: '#/definitions/ErrorResponse'
  
  '/submissions/{submissionId}':
    get:
      tags:
        - Submissions
      summary: Get a submission by ID.
      description: |
        **OJS 3.1 Target**:
          * All keys except `stages`, `reviewRounds` and `reviewAssignments`
        **Additional notes**:
          * Unpublished submissions are only returned for assigned participants, editors and admins.
          * `abstract` includes HTML markup.
          * `pages` is usually a `string`. But in some cases it may return an array of arrays. Each array contains two items: the start and end page. Example: `[[25, 31], [45, 62]]`.
          * `submissionProgress` will be > 0 if the submission is incomplete.
          * `stages`, `reviewRounds` and `reviewAssignments` should only be returned for participants assigned to the submission.
          * `reviewAssignments` should only expose user-identifying information for editors and admins.
      parameters:
        - name: submissionId
          in: path
          description: Submission ID
          required: true
          type: integer
      responses:
        '200':
          description: Submission details.
          schema:
            $ref: '#/definitions/Submission'
        '403':
          description: You do not have permission to access this submission.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Requested submission could not be found
          schema:
            $ref: '#/definitions/ErrorResponse'
  
  '/submissions/{submissionId}/chapters':
    get:
      tags:
        - Submissions
      summary: Get submission chapters.
      description: |
        **OJS 3.1 Target**:
          - Complete
        **Additional Notes**:
          - This endpoint will not be available until the monograph is published.
      parameters:
        - name: submissionId
          in: path
          description: Submission ID
          required: true
          type: integer
      responses:
        '200':
          description: Array of galleys.
        '404':
          description: Requested submission could not be found.
  
  '/submissions/{submissionId}/participants':
    get:
      tags:
        - Submissions
      summary: Get participants assigned to a submission.
      parameters:
        - name: submissionId
          in: path
          description: Submission ID
          required: true
          type: integer
      responses:
        '200':
          description: Array of users.
          schema:
            type: array
            items:
              $ref: '#/definitions/UserSummary'
        '404':
          description: Requested submission could not be found.
          schema:
            $ref: '#/definitions/ErrorResponse'
  
  '/submissions/{submissionId}/participants/{stageId}':
    get:
      tags:
        - Submissions
      summary: Get participants assigned to a stage of this submission's workflow.
      parameters:
        - name: submissionId
          in: path
          description: Submission ID
          required: true
          type: integer
        - name: stageId
          in: path
          description: Stage ID
          required: true
          type: integer
      responses:
        '200':
          description: Array of users.
          schema:
            type: array
            items:
              $ref: '#/definitions/UserSummary'
        '404':
          description: Requested submission could not be found.
          schema:
            $ref: '#/definitions/ErrorResponse'
          
  '/series':
    get:
      tags: 
        - Series
      summary: Get a list of available series.
      responses:
        '200':
          description: List of series.
          schema:
            $ref: '#/definitions/Serie'
          
  '/series/{seriesId}':
    get:
      tags: 
        - Series
      summary: Get a serie by ID.
      parameters:
        - name: seriesId
          in: path
          description: Series ID
          required: true
          type: integer
      responses:
        '200':
          description: List of series.
          schema:
            $ref: '#/definitions/Serie'
        '404':
          description: Requested serie could not be found.
          schema:
            $ref: '#/definitions/ErrorResponse'
          
  '/categories':
    get:
      tags: 
        - Categories
      summary: Get a list of available categories.
      parameters: 
        - name: parentId
          description: Limits the results to sub categories of a specific parent.
          in: query
          required: false
          type: string
      responses:
        '200':
          description: List of categories.
          schema:
            $ref: '#/definitions/CategorySummary'
          
  '/categories/{categoryId}':
    get:
      tags: 
        - Categories
      summary: Get a category by ID.
      parameters:
        - name: categoryId
          in: path
          description: Category ID
          required: true
          type: integer
      responses:
        '200':
          description: List of categories.
          schema:
            $ref: '#/definitions/Category'
        '404':
          description: Requested category could not be found.
          schema:
            $ref: '#/definitions/ErrorResponse'
          
  '/users':
    get:
      tags:
        - Users
      summary: Get a list of users.
      description: |
        In Progress.
      parameters:
        - name: roleIds
          description: Filter the results by those who have one of these user role IDs.
          in: query
          required: false
          type: string
        - name: status
          description: Filter results by active/disabled users. Must be one of `active`, `disabled`, `all`. Default is `active`.
          in: query
          required: false
          type: string
        - name: assignedToSubmission
          description: Filter results by those assigned to this submission ID.
          in: query
          required: false
          type: integer
        - name: assignedToSubmissionStage
          description: Filter results by those assigned to this submission stage. Will be ignored if no `assignedToSubmission` parameter exists.
          in: query
          required: false
          type: integer
        - name: assignedToSection
          description: Filter the results by those assigned as section editors to this section ID.
          in: query
          required: false
          type: integer
        - name: count
          description: How many results to return in a single request. Default is `20`. Max is `100`.
          in: query
          required: false
          type: integer
        - name: offset
          description: Offset the results returned. Use this to receive subsequent pages of requests. A `count` of `10` and `offset` of `15` will return results `15` to `25`.
          in: query
          required: false
          type: integer
        - name: orderBy
          description: Order the results returned. Must be one of `id`, `familyName` or `givenName`. Default is `id`.
          in: query
          required: false
          type: string
        - name: orderDirection
          description: Return the results in ascending or descending order. Must be `ASC` or `DESC`. Default is `DESC`.
          in: query
          required: false
          type: string
        - name: searchPhrase
          description: Filter the results by a search phrase matched against the `userName`, `firstName`, `middleName`, `lastName`, `initials`, `salutation`, `suffix`, `email`, `affiliation`, `biography` and `orcid`.
          in: query
          required: false
          type: string
      responses:
        '200':
          description: List of users.
          schema:
            type: object
            properties:
              itemsMax:
                type: integer
              items:
                type: array
                items:
                  $ref: '#/definitions/UserSummary'
        '403':
          description: Only administrators, journal managers and editors are allowed to access users on this site.
          schema:
            $ref: '#/definitions/ErrorResponse'

  '/users/{userId}':
    get:
      tags:
        - Users
      summary: Get a user by ID.
      description: |
        In progress.
      parameters:
        - name: userId
          description: User ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: User details.
          schema:
            $ref: '#/definitions/User'

  '/users/reviewers':
    get:
      tags:
        - Users
      summary: Get a list of reviewers.
      description: |
        In Progress.
      parameters:
        - name: status
          description: Filter results by active/disabled users. Must be one of `active`, `disabled`, `all`. Default is `active`.
          in: query
          required: false
          type: string
        - name: reviewerRating
          description: Filter results by those who have an average review assignment rating of at least `X` (valid ratings are between `1` and `5`).
          in: query
          required: false
          type: integer
        - name: reviewsCompleted
          description: Filter results by those who have completed at least `X` reviews. You can also pass a range as a string formatted as `X-X`
          in: query
          required: false
          type: integer
        - name: reviewsActive
          description: Filter results by those who have `X` review assignments currently in progress. You can also pass a range as a string formatted as `X-X`.
          in: query
          required: false
          type: integer
        - name: daysSinceLastAssignment
          description: Filter results by those who's last review was assigned at least `X` days ago. You can also pass a range as a string formatted as `X-X`.
          in: query
          required: false
          type: integer
        - name: averageCompletion
          description: Filter results by those who complete a review assignment within `X` days on average.
          in: query
          required: false
          type: integer
        - name: assignedToSubmission
          description: Filter results by those assigned to this submission ID.
          in: query
          required: false
          type: integer
        - name: assignedToSubmissionStage
          description: Filter results by those assigned to this submission stage. Will be ignored if no `assignedToSubmission` parameter exists.
          in: query
          required: false
          type: integer
        - name: assignedToSection
          description: Filter the results by those assigned as section editors to this section ID.
          in: query
          required: false
          type: integer
        - name: count
          description: How many results to return in a single request. Default is `20`. Max is `100`.
          in: query
          required: false
          type: integer
        - name: offset
          description: Offset the results returned. Use this to receive subsequent pages of requests. A `count` of `10` and `offset` of `15` will return results `15` to `25`.
          in: query
          required: false
          type: integer
        - name: orderBy
          description: Order the results returned. Must be one of `id`, `familyName` or `givenName`. Default is `id`.
          in: query
          required: false
          type: string
        - name: orderDirection
          description: Return the results in ascending or descending order. Must be `ASC` or `DESC`. Default is `DESC`.
          in: query
          required: false
          type: string
        - name: searchPhrase
          description: Filter the results by a search phrase matched against the `userName`, `firstName`, `middleName`, `lastName`, `initials`, `salutation`, `suffix`, `email`, `affiliation`, `biography`, `orcid`, `interests`, and `gossip`.
          in: query
          required: false
          type: string
      responses:
        '200':
          description: List of users.
          schema:
            type: object
            properties:
              itemsMax:
                type: integer
              items:
                type: array
                items:
                  $ref: '#/definitions/ReviewerSummary'
        '403':
          description: Only administrators, journal managers and editors are allowed to access users on this site.
          schema:
            $ref: '#/definitions/ErrorResponse'

  '/_submissions':
    get:
      tags:
        - Backend
      summary: Submission list
      description: |
        Retrieve submission list
      parameters:
        - name: orderColumn
          in: query
          description: Field to order by
          required: false
          type: string
          default: id
        - name: orderDirection
          in: query
          description: Order direction
          required: false
          type: string
          default: 'DESC'
        - name: assignedTo
          in: query
          description: Assignee user ID
          required: false
          type: integer
        - name: statuses
          in: query
          description: Status list
          required: false
          type: array
          items:
            type: integer
        - name: searchPhrase
          in: query
          description: Search phrase
          required: false
          type: string
        - name: count
          description: How many results to return in a single request. Default is `20`. Max is `100`.
          in: query
          required: false
          type: integer
        - name: offset
          description: Offset the results returned. Use this to receive subsequent pages of requests. A `count` of `10` and `offset` of `15` will return results `15` to `25`.
          in: query
          required: false
          type: integer
      responses:
        '200':
          description: array of submissions
